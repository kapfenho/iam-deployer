#!/bin/sh
#
# startup script for oracle weblogic nodemanager
#                     horst.kapfenberger@agoracon.at
#
### BEGIN INIT INFO
# Provides:           oracle weblogic nodemanager
# Required-Start:     $local_fs $remote_fs $named $network $time
# Required-Stop:      $local_fs $remote_fs $named $network
# Should-Start:       
# Should-Stop:        
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  nodemanager manages weblogic server instances
# Description:        daemon to control and monitor all java weblogic instances
### END INIT INFO
#
# Source function library.
. /etc/rc.d/init.d/functions
# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

logfile=/var/log/fmw/nodemanager/nodemanager.log
lockfile=${logfile}.lck
exec=/opt/fmw/config/nodemanager/$(hostname -f)/startNodeManagerWrapper.sh
psfind='java .* weblogic.NodeManager '
prog='iamnm'
user='fmwuser'

is_nodemgr_running() {
  local nodemgr_cnt=`ps -elF | \
    grep -i "${psfind}" | \
    grep -v grep | \
    wc -l`
  echo $nodemgr_cnt
}

get_nodemgr_pid() {
  nodemgr_pid=0
  if [ `is_nodemgr_running` -eq 1 ]; then
    nodemgr_pid=`ps -elF | \
      grep -i "${psfind}" | \
      grep -v grep | \
      tr -s ' ' | \
      cut -d' ' -f4`
  fi
  echo $nodemgr_pid
}

check_nodemgr_status () {
  local retval=0
  local nodemgr_cnt=`is_nodemgr_running`
  if [ $nodemgr_cnt -eq 0 ]; then
    if [ -f $lockfile ]; then
      retval=2
    else
      retval=3
    fi
  elif [ $nodemgr_cnt -gt 1 ]; then
    retval=4
  else
    retval=0
  fi

  echo $retval
}

start() {
  # [ -x $exec ] || exit 5
  if ! su - $user -c "test -a $exec" ; then
    exit 5
  fi
  echo -n $"Starting $prog: "
  su - $user -c "nohup $exec &>>$logfile &"
  retval=$?
  [ retval ] && sleep 1s && [ -a ${log} ] && tail -f ${logfile} | grep -m 1 '.*started.*' 
  echo
  return $retval
}

stop() {
  echo -n $"Stopping $prog: "
  kill -s 9 `get_nodemgr_pid` &> /dev/null
  retval=$?
  echo
  [ $retval -eq 0 ] && rm -f $lockfile
  return $retval
}

restart() {
  stop
  start
}

reload() {
  restart
}

force_reload() {
  restart
}

rh_status() {
  local retval=`check_nodemgr_status`
  if [ $retval -eq 0 ]; then
    echo "$prog (pid:`get_nodemgr_pid`) is running..."
  elif [ $retval -eq 4 ]; then
    echo "Multiple instances of $prog are running..."
  else
    echo "$prog is stopped"
  fi
  return $retval
}

rh_status_q() {
  rh_status >/dev/null  2>&1
}


case "$1" in
  start)
    rh_status_q && exit 0
    $1
    ;;
  stop)
    rh_status_q || exit 0
    $1
    ;;
  restart)
    $1
    ;;
  reload)
    rh_status_q || exit 7
    $1
    ;;
  force-reload)
    force_reload
    ;;
  status)
    rh_status
    ;;
  condrestart|try-restart)
    rh_status_q || exit 0
    restart
    ;;
  *)
    echo -n "Usage: $0 {"
    echo -n "start|"
    echo -n "stop|"
    echo -n "status|"
    echo -n "restart|"
    echo -n "condrestart|"
    echo -n "try-restart|"
    echo -n "reload|"
    echo -n "force-reload"
    echo "}"

    exit 2
esac
exit $?

